	.file	"mksyntax.c"
	.text
.Ltext0:
	.globl	wordflags
	.section	.rodata
.LC0:
	.string	"CWORD"
.LC1:
	.string	"CSHMETA"
.LC2:
	.string	"CSHBRK"
.LC3:
	.string	"CBACKQ"
.LC4:
	.string	"CQUOTE"
.LC5:
	.string	"CSPECL"
.LC6:
	.string	"CEXP"
.LC7:
	.string	"CBSDQUOTE"
.LC8:
	.string	"CBSHDOC"
.LC9:
	.string	"CGLOB"
.LC10:
	.string	"CXGLOB"
.LC11:
	.string	"CXQUOTE"
.LC12:
	.string	"CSPECVAR"
.LC13:
	.string	"CSUBSTOP"
.LC14:
	.string	"CBLANK"
	.data
	.align 32
	.type	wordflags, @object
	.size	wordflags, 240
wordflags:
	.long	0
	.zero	4
	.quad	.LC0
	.long	1
	.zero	4
	.quad	.LC1
	.long	2
	.zero	4
	.quad	.LC2
	.long	4
	.zero	4
	.quad	.LC3
	.long	8
	.zero	4
	.quad	.LC4
	.long	16
	.zero	4
	.quad	.LC5
	.long	32
	.zero	4
	.quad	.LC6
	.long	64
	.zero	4
	.quad	.LC7
	.long	128
	.zero	4
	.quad	.LC8
	.long	256
	.zero	4
	.quad	.LC9
	.long	512
	.zero	4
	.quad	.LC10
	.long	1024
	.zero	4
	.quad	.LC11
	.long	2048
	.zero	4
	.quad	.LC12
	.long	4096
	.zero	4
	.quad	.LC13
	.long	8192
	.zero	4
	.quad	.LC14
	.comm	lsyntax,1024,32
	.comm	debug,4,4
	.comm	progname,8,8
	.globl	preamble
	.align 32
	.type	preamble, @object
	.size	preamble, 63
preamble:
	.string	"/*\n * This file was generated by mksyntax.  DO NOT EDIT.\n */\n\n"
	.globl	includes
	.align 32
	.type	includes, @object
	.size	includes, 60
includes:
	.string	"#include \"config.h\"\n#include \"stdc.h\"\n#include \"syntax.h\"\n\n"
	.section	.rodata
	.align 8
.LC15:
	.string	"%s: usage: %s [-d] [-o filename]\n"
	.text
	.type	usage, @function
usage:
.LFB0:
	.file 1 "./mksyntax.c"
	.loc 1 88 0
	.cfi_startproc
	pushq	%rbp
.LCFI0:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI1:
	.cfi_def_cfa_register 6
	.loc 1 89 0
	movq	progname(%rip), %rcx
	movq	progname(%rip), %rdx
	movl	$.LC15, %esi
	movq	stderr(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 90 0
	movl	$2, %edi
	call	exit
	.cfi_endproc
.LFE0:
	.size	usage, .-usage
	.section	.rodata
.LC16:
	.string	"SPC"
.LC17:
	.string	"CTLESC"
.LC18:
	.string	"CTLNUL"
.LC19:
	.string	"ESC"
.LC20:
	.string	"%d"
	.text
	.type	cdesc, @function
cdesc:
.LFB1:
	.loc 1 110 0
	.cfi_startproc
	pushq	%rbp
.LCFI2:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI3:
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	.loc 1 113 0
	cmpl	$32, -4(%rbp)
	jne	.L3
	.loc 1 114 0
	movl	$.LC16, %eax
	jmp	.L4
.L3:
	.loc 1 115 0
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movslq	%edx, %rdx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L5
	.loc 1 117 0
	movl	-4(%rbp), %eax
	movb	%al, xbuf.4165(%rip)
	.loc 1 118 0
	movb	$0, xbuf.4165+1(%rip)
	.loc 1 119 0
	movl	$xbuf.4165, %eax
	jmp	.L4
.L5:
	.loc 1 121 0
	cmpl	$1, -4(%rbp)
	jne	.L6
	.loc 1 122 0
	movl	$.LC17, %eax
	jmp	.L4
.L6:
	.loc 1 123 0
	cmpl	$127, -4(%rbp)
	jne	.L7
	.loc 1 124 0
	movl	$.LC18, %eax
	jmp	.L4
.L7:
	.loc 1 125 0
	cmpl	$27, -4(%rbp)
	jne	.L8
	.loc 1 126 0
	movl	$.LC19, %eax
	jmp	.L4
.L8:
	.loc 1 128 0
	movb	$92, xbuf.4165(%rip)
	.loc 1 129 0
	movb	$0, xbuf.4165+2(%rip)
	.loc 1 131 0
	movl	-4(%rbp), %eax
	subl	$7, %eax
	cmpl	$6, %eax
	ja	.L9
	movl	%eax, %eax
	movq	.L17(,%rax,8), %rax
	jmp	*%rax
	.section	.rodata
	.align 8
	.align 4
.L17:
	.quad	.L10
	.quad	.L11
	.quad	.L12
	.quad	.L13
	.quad	.L14
	.quad	.L15
	.quad	.L16
	.text
.L10:
	.loc 1 134 0
	movb	$97, xbuf.4165+1(%rip)
	jmp	.L18
.L14:
	.loc 1 135 0
	movb	$118, xbuf.4165+1(%rip)
	jmp	.L18
.L11:
	.loc 1 140 0
	movb	$98, xbuf.4165+1(%rip)
	jmp	.L18
.L15:
	.loc 1 141 0
	movb	$102, xbuf.4165+1(%rip)
	jmp	.L18
.L13:
	.loc 1 142 0
	movb	$110, xbuf.4165+1(%rip)
	jmp	.L18
.L16:
	.loc 1 143 0
	movb	$114, xbuf.4165+1(%rip)
	jmp	.L18
.L12:
	.loc 1 144 0
	movb	$116, xbuf.4165+1(%rip)
	jmp	.L18
.L9:
	.loc 1 145 0
	movl	$.LC20, %eax
	movl	-4(%rbp), %edx
	movq	%rax, %rsi
	movl	$xbuf.4165, %edi
	movl	$0, %eax
	call	sprintf
	nop
.L18:
	.loc 1 148 0
	movl	$xbuf.4165, %eax
.L4:
	.loc 1 149 0
	leave
.LCFI4:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	cdesc, .-cdesc
	.type	getcstr, @function
getcstr:
.LFB2:
	.loc 1 154 0
	.cfi_startproc
	pushq	%rbp
.LCFI5:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI6:
	.cfi_def_cfa_register 6
	movl	%edi, -20(%rbp)
	.loc 1 157 0
	movl	$0, -4(%rbp)
	jmp	.L20
.L23:
	.loc 1 158 0
	movl	-4(%rbp), %eax
	cltq
	salq	$4, %rax
	addq	$wordflags, %rax
	movl	(%rax), %eax
	cmpl	-20(%rbp), %eax
	jne	.L21
	.loc 1 159 0
	movl	-4(%rbp), %eax
	cltq
	salq	$4, %rax
	addq	$wordflags, %rax
	movq	8(%rax), %rax
	jmp	.L22
.L21:
	.loc 1 157 0
	addl	$1, -4(%rbp)
.L20:
	.loc 1 157 0 is_stmt 0 discriminator 1
	movl	-4(%rbp), %eax
	cmpl	$14, %eax
	jbe	.L23
	.loc 1 160 0 is_stmt 1
	movl	$0, %eax
.L22:
	.loc 1 161 0
	popq	%rbp
.LCFI7:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	getcstr, .-getcstr
	.section	.rodata
.LC21:
	.string	"added %s for character %s\n"
	.text
	.type	addcstr, @function
addcstr:
.LFB3:
	.loc 1 167 0
	.cfi_startproc
	pushq	%rbp
.LCFI8:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI9:
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movl	%esi, -44(%rbp)
	.loc 1 171 0
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	jmp	.L25
.L28:
	.loc 1 173 0
	movq	-24(%rbp), %rax
	movzbl	(%rax), %eax
	movb	%al, -1(%rbp)
	.loc 1 175 0
	movl	debug(%rip), %eax
	testl	%eax, %eax
	je	.L26
	.loc 1 177 0
	movl	-44(%rbp), %eax
	movl	%eax, %edi
	movl	$0, %eax
	call	getcstr
	movq	%rax, -16(%rbp)
	.loc 1 178 0
	movzbl	-1(%rbp), %eax
	movl	%eax, %edi
	movl	$0, %eax
	call	cdesc
	movq	%rax, %rcx
	movl	$.LC21, %esi
	movq	stderr(%rip), %rax
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
.L26:
	.loc 1 181 0
	movzbl	-1(%rbp), %ecx
	movzbl	-1(%rbp), %eax
	cltq
	movl	lsyntax(,%rax,4), %eax
	movl	%eax, %edx
	orl	-44(%rbp), %edx
	movslq	%ecx, %rax
	movl	%edx, lsyntax(,%rax,4)
	.loc 1 171 0
	addq	$1, -24(%rbp)
.L25:
	.loc 1 171 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)
	je	.L24
	.loc 1 171 0 discriminator 2
	movq	-24(%rbp), %rax
	movzbl	(%rax), %eax
	testb	%al, %al
	jne	.L28
.L24:
	.loc 1 183 0 is_stmt 1
	leave
.LCFI10:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	addcstr, .-addcstr
	.type	addcchar, @function
addcchar:
.LFB4:
	.loc 1 189 0
	.cfi_startproc
	pushq	%rbp
.LCFI11:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI12:
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, %eax
	movl	%esi, -24(%rbp)
	movb	%al, -20(%rbp)
	.loc 1 192 0
	movl	debug(%rip), %eax
	testl	%eax, %eax
	je	.L30
	.loc 1 194 0
	movl	-24(%rbp), %eax
	movl	%eax, %edi
	movl	$0, %eax
	call	getcstr
	movq	%rax, -8(%rbp)
	.loc 1 195 0
	movzbl	-20(%rbp), %eax
	movl	%eax, %edi
	movl	$0, %eax
	call	cdesc
	movq	%rax, %rcx
	movl	$.LC21, %esi
	movq	stderr(%rip), %rax
	movq	-8(%rbp), %rdx
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
.L30:
	.loc 1 197 0
	movzbl	-20(%rbp), %ecx
	movzbl	-20(%rbp), %eax
	cltq
	movl	lsyntax(,%rax,4), %eax
	movl	%eax, %edx
	orl	-24(%rbp), %edx
	movslq	%ecx, %rax
	movl	%edx, lsyntax(,%rax,4)
	.loc 1 198 0
	leave
.LCFI13:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	addcchar, .-addcchar
	.type	addblanks, @function
addblanks:
.LFB5:
	.loc 1 202 0
	.cfi_startproc
	pushq	%rbp
.LCFI14:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI15:
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.loc 1 206 0
	movl	$0, %ebx
	.cfi_offset 3, -24
	jmp	.L32
.L34:
	.loc 1 208 0
	movb	%bl, -17(%rbp)
	.loc 1 211 0
	call	__ctype_b_loc
	movq	(%rax), %rax
	movzbl	-17(%rbp), %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L33
	.loc 1 212 0
	movzbl	-17(%rbp), %ecx
	movzbl	-17(%rbp), %eax
	cltq
	movl	lsyntax(,%rax,4), %eax
	movl	%eax, %edx
	orb	$32, %dh
	movslq	%ecx, %rax
	movl	%edx, lsyntax(,%rax,4)
.L33:
	.loc 1 206 0
	addl	$1, %ebx
.L32:
	.loc 1 206 0 is_stmt 0 discriminator 1
	cmpl	$255, %ebx
	jle	.L34
	.loc 1 214 0 is_stmt 1
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
.LCFI16:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	addblanks, .-addblanks
	.section	.rodata
.LC22:
	.string	"()<>;&|"
.LC23:
	.string	"()<>;&| \t\n"
.LC24:
	.string	"\"`'"
.LC25:
	.string	"$<>"
.LC26:
	.string	"\\`$\"\n"
.LC27:
	.string	"\\`$"
.LC28:
	.string	"*?[]^"
.LC29:
	.string	"@*+?!"
.LC30:
	.string	"@*#?-$!"
.LC31:
	.string	"-=?+"
	.text
	.type	load_lsyntax, @function
load_lsyntax:
.LFB6:
	.loc 1 219 0
	.cfi_startproc
	pushq	%rbp
.LCFI17:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI18:
	.cfi_def_cfa_register 6
	.loc 1 221 0
	movl	$1, %esi
	movl	$.LC22, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 224 0
	movl	$2, %esi
	movl	$.LC23, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 226 0
	movl	$4, %esi
	movl	$96, %edi
	movl	$0, %eax
	call	addcchar
	.loc 1 228 0
	movl	$8, %esi
	movl	$.LC24, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 230 0
	movl	$16, %esi
	movl	$1, %edi
	movl	$0, %eax
	call	addcchar
	.loc 1 231 0
	movl	$16, %esi
	movl	$127, %edi
	movl	$0, %eax
	call	addcchar
	.loc 1 233 0
	movl	$32, %esi
	movl	$.LC25, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 235 0
	movl	$64, %esi
	movl	$.LC26, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 236 0
	movl	$128, %esi
	movl	$.LC27, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 238 0
	movl	$256, %esi
	movl	$.LC28, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 241 0
	movl	$512, %esi
	movl	$.LC29, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 244 0
	movl	$1024, %esi
	movl	$.LC24, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 245 0
	movl	$1024, %esi
	movl	$92, %edi
	movl	$0, %eax
	call	addcchar
	.loc 1 247 0
	movl	$2048, %esi
	movl	$.LC30, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 249 0
	movl	$4096, %esi
	movl	$.LC31, %edi
	movl	$0, %eax
	call	addcstr
	.loc 1 251 0
	movl	$0, %eax
	call	addblanks
	.loc 1 252 0
	popq	%rbp
.LCFI19:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	load_lsyntax, .-load_lsyntax
	.type	dump_lflags, @function
dump_lflags:
.LFB7:
	.loc 1 258 0
	.cfi_startproc
	pushq	%rbp
.LCFI20:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI21:
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 261 0
	movl	-28(%rbp), %eax
	cltq
	movl	lsyntax(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	.loc 1 262 0
	movl	$1, -12(%rbp)
	.loc 1 264 0
	cmpl	$0, -4(%rbp)
	jne	.L37
	.loc 1 265 0
	movq	wordflags+8(%rip), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	fputs
	jmp	.L36
.L37:
	.loc 1 268 0
	movl	$1, -8(%rbp)
	jmp	.L39
.L43:
	.loc 1 269 0
	movl	-8(%rbp), %eax
	cltq
	salq	$4, %rax
	addq	$wordflags, %rax
	movl	(%rax), %eax
	andl	-4(%rbp), %eax
	testl	%eax, %eax
	je	.L40
	.loc 1 271 0
	cmpl	$0, -12(%rbp)
	je	.L41
	.loc 1 272 0
	movl	$0, -12(%rbp)
	jmp	.L42
.L41:
	.loc 1 274 0
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movl	$124, %edi
	call	_IO_putc
.L42:
	.loc 1 275 0
	movl	-8(%rbp), %eax
	cltq
	salq	$4, %rax
	addq	$wordflags, %rax
	movq	8(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	fputs
.L40:
	.loc 1 268 0
	addl	$1, -8(%rbp)
.L39:
	.loc 1 268 0 is_stmt 0 discriminator 1
	movl	-8(%rbp), %eax
	cmpl	$14, %eax
	jbe	.L43
.L36:
	.loc 1 278 0 is_stmt 1
	leave
.LCFI22:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	dump_lflags, .-dump_lflags
	.section	.rodata
.LC32:
	.string	"\t\t/* "
.LC33:
	.string	" */"
	.text
	.type	wcomment, @function
wcomment:
.LFB8:
	.loc 1 284 0
	.cfi_startproc
	pushq	%rbp
.LCFI23:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI24:
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	.loc 1 285 0
	movl	$.LC32, %eax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rcx
	movl	$5, %edx
	movl	$1, %esi
	movq	%rax, %rdi
	call	fwrite
	.loc 1 287 0
	movl	-12(%rbp), %eax
	movl	%eax, %edi
	movl	$0, %eax
	call	cdesc
	movq	-8(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	fputs
	.loc 1 289 0
	movl	$.LC33, %eax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rcx
	movl	$3, %edx
	movl	$1, %esi
	movq	%rax, %rdi
	call	fwrite
	.loc 1 290 0
	leave
.LCFI25:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	wcomment, .-wcomment
	.section	.rodata
.LC34:
	.string	"int sh_syntabsiz = %d;\n"
.LC35:
	.string	"int sh_syntaxtab[%d] = {\n"
.LC36:
	.string	"};\n"
	.text
	.type	dump_lsyntax, @function
dump_lsyntax:
.LFB9:
	.loc 1 295 0
	.cfi_startproc
	pushq	%rbp
.LCFI26:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI27:
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 298 0
	movl	$.LC34, %ecx
	movq	-24(%rbp), %rax
	movl	$256, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 299 0
	movl	$.LC35, %ecx
	movq	-24(%rbp), %rax
	movl	$256, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 301 0
	movl	$0, -4(%rbp)
	jmp	.L46
.L47:
	.loc 1 303 0 discriminator 2
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movl	$9, %edi
	call	_IO_putc
	.loc 1 304 0 discriminator 2
	movl	-4(%rbp), %edx
	movq	-24(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	dump_lflags
	.loc 1 305 0 discriminator 2
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movl	$44, %edi
	call	_IO_putc
	.loc 1 306 0 discriminator 2
	movl	-4(%rbp), %edx
	movq	-24(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	wcomment
	.loc 1 307 0 discriminator 2
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movl	$10, %edi
	call	_IO_putc
	.loc 1 301 0 discriminator 2
	addl	$1, -4(%rbp)
.L46:
	.loc 1 301 0 is_stmt 0 discriminator 1
	cmpl	$255, -4(%rbp)
	jle	.L47
	.loc 1 310 0 is_stmt 1
	movl	$.LC36, %eax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rcx
	movl	$3, %edx
	movl	$1, %esi
	movq	%rax, %rdi
	call	fwrite
	.loc 1 311 0
	leave
.LCFI28:
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	dump_lsyntax, .-dump_lsyntax
	.section	.rodata
.LC37:
	.string	"do:"
.LC38:
	.string	"w"
.LC39:
	.string	"%s: %s: cannot open: %s\n"
.LC40:
	.string	"stdout"
.LC41:
	.string	"%s\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB10:
	.loc 1 317 0
	.cfi_startproc
	pushq	%rbp
.LCFI29:
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
.LCFI30:
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	.loc 1 322 0
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movl	$47, %esi
	movq	%rax, %rdi
	call	strrchr
	movq	%rax, progname(%rip)
	movq	progname(%rip), %rax
	testq	%rax, %rax
	jne	.L49
	.loc 1 323 0
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, progname(%rip)
	jmp	.L50
.L49:
	.loc 1 325 0
	movq	progname(%rip), %rax
	addq	$1, %rax
	movq	%rax, progname(%rip)
.L50:
	.loc 1 327 0
	movq	$0, -24(%rbp)
	.loc 1 328 0
	movl	$0, debug(%rip)
	.loc 1 330 0
	jmp	.L51
.L55:
	.loc 1 332 0
	movl	-4(%rbp), %eax
	cmpl	$100, %eax
	je	.L53
	cmpl	$111, %eax
	je	.L54
	jmp	.L61
.L53:
	.loc 1 335 0
	movl	$1, debug(%rip)
	.loc 1 336 0
	jmp	.L51
.L54:
	.loc 1 338 0
	movq	optarg(%rip), %rax
	movq	%rax, -24(%rbp)
	.loc 1 339 0
	jmp	.L51
.L61:
	.loc 1 341 0
	movl	$0, %eax
	call	usage
.L51:
	.loc 1 330 0 discriminator 1
	movq	-48(%rbp), %rcx
	movl	-36(%rbp), %eax
	movl	$.LC37, %edx
	movq	%rcx, %rsi
	movl	%eax, %edi
	call	getopt
	movl	%eax, -4(%rbp)
	cmpl	$-1, -4(%rbp)
	jne	.L55
	.loc 1 345 0
	movl	optind(%rip), %eax
	subl	%eax, -36(%rbp)
	.loc 1 346 0
	movl	optind(%rip), %eax
	cltq
	salq	$3, %rax
	addq	%rax, -48(%rbp)
	.loc 1 348 0
	cmpq	$0, -24(%rbp)
	je	.L56
	.loc 1 350 0
	movl	$.LC38, %edx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	fopen
	movq	%rax, -16(%rbp)
	.loc 1 351 0
	cmpq	$0, -16(%rbp)
	jne	.L57
	.loc 1 353 0
	call	__errno_location
	movl	(%rax), %eax
	movl	%eax, %edi
	call	strerror
	movq	%rax, %rdi
	movq	progname(%rip), %rdx
	movl	$.LC39, %esi
	movq	stderr(%rip), %rax
	movq	-24(%rbp), %rcx
	movq	%rdi, %r8
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 354 0
	movl	$1, %edi
	call	exit
.L56:
	.loc 1 359 0
	movq	$.LC40, -24(%rbp)
	.loc 1 360 0
	movq	stdout(%rip), %rax
	movq	%rax, -16(%rbp)
.L57:
	.loc 1 364 0
	movl	$0, -8(%rbp)
	jmp	.L58
.L59:
	.loc 1 365 0 discriminator 2
	movl	-8(%rbp), %eax
	cltq
	movl	$0, lsyntax(,%rax,4)
	.loc 1 364 0 discriminator 2
	addl	$1, -8(%rbp)
.L58:
	.loc 1 364 0 is_stmt 0 discriminator 1
	cmpl	$255, -8(%rbp)
	jle	.L59
	.loc 1 367 0 is_stmt 1
	movl	$0, %eax
	call	load_lsyntax
	.loc 1 369 0
	movl	$.LC41, %ecx
	movq	-16(%rbp), %rax
	movl	$preamble, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 370 0
	movl	$.LC41, %ecx
	movq	-16(%rbp), %rax
	movl	$includes, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	fprintf
	.loc 1 372 0
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	dump_lsyntax
	.loc 1 374 0
	movq	stdout(%rip), %rax
	cmpq	%rax, -16(%rbp)
	je	.L60
	.loc 1 375 0
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	fclose
.L60:
	.loc 1 376 0
	movl	$0, %edi
	call	exit
	.cfi_endproc
.LFE10:
	.size	main, .-main
	.local	xbuf.4165
	.comm	xbuf.4165,16,16
.Letext0:
	.file 2 "/usr/include/libio.h"
	.file 3 "/usr/include/stdio.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h"
	.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 6 "/usr/include/getopt.h"
	.file 7 "/usr/include/ctype.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x778
	.value	0x2
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF89
	.byte	0x1
	.long	.LASF90
	.long	.LASF91
	.quad	.Ltext0
	.quad	.Letext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF31
	.byte	0x3
	.byte	0x31
	.long	0x38
	.uleb128 0x3
	.long	.LASF41
	.byte	0xd8
	.byte	0x2
	.value	0x111
	.long	0x205
	.uleb128 0x4
	.long	.LASF0
	.byte	0x2
	.value	0x112
	.long	0x220
	.byte	0x2
	.byte	0x23
	.uleb128 0
	.uleb128 0x4
	.long	.LASF1
	.byte	0x2
	.value	0x117
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x4
	.long	.LASF2
	.byte	0x2
	.value	0x118
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x4
	.long	.LASF3
	.byte	0x2
	.value	0x119
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x4
	.long	.LASF4
	.byte	0x2
	.value	0x11a
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x4
	.long	.LASF5
	.byte	0x2
	.value	0x11b
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x4
	.long	.LASF6
	.byte	0x2
	.value	0x11c
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x4
	.long	.LASF7
	.byte	0x2
	.value	0x11d
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x4
	.long	.LASF8
	.byte	0x2
	.value	0x11e
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x4
	.long	.LASF9
	.byte	0x2
	.value	0x120
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x4
	.long	.LASF10
	.byte	0x2
	.value	0x121
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x4
	.long	.LASF11
	.byte	0x2
	.value	0x122
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x4
	.long	.LASF12
	.byte	0x2
	.value	0x124
	.long	0x2ab
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x4
	.long	.LASF13
	.byte	0x2
	.value	0x126
	.long	0x2b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x4
	.long	.LASF14
	.byte	0x2
	.value	0x128
	.long	0x220
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0x4
	.long	.LASF15
	.byte	0x2
	.value	0x12c
	.long	0x220
	.byte	0x2
	.byte	0x23
	.uleb128 0x74
	.uleb128 0x4
	.long	.LASF16
	.byte	0x2
	.value	0x12e
	.long	0x251
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0x4
	.long	.LASF17
	.byte	0x2
	.value	0x132
	.long	0x22e
	.byte	0x3
	.byte	0x23
	.uleb128 0x80
	.uleb128 0x4
	.long	.LASF18
	.byte	0x2
	.value	0x133
	.long	0x23c
	.byte	0x3
	.byte	0x23
	.uleb128 0x82
	.uleb128 0x4
	.long	.LASF19
	.byte	0x2
	.value	0x134
	.long	0x2b7
	.byte	0x3
	.byte	0x23
	.uleb128 0x83
	.uleb128 0x4
	.long	.LASF20
	.byte	0x2
	.value	0x138
	.long	0x2c7
	.byte	0x3
	.byte	0x23
	.uleb128 0x88
	.uleb128 0x4
	.long	.LASF21
	.byte	0x2
	.value	0x141
	.long	0x25c
	.byte	0x3
	.byte	0x23
	.uleb128 0x90
	.uleb128 0x4
	.long	.LASF22
	.byte	0x2
	.value	0x14a
	.long	0x213
	.byte	0x3
	.byte	0x23
	.uleb128 0x98
	.uleb128 0x4
	.long	.LASF23
	.byte	0x2
	.value	0x14b
	.long	0x213
	.byte	0x3
	.byte	0x23
	.uleb128 0xa0
	.uleb128 0x4
	.long	.LASF24
	.byte	0x2
	.value	0x14c
	.long	0x213
	.byte	0x3
	.byte	0x23
	.uleb128 0xa8
	.uleb128 0x4
	.long	.LASF25
	.byte	0x2
	.value	0x14d
	.long	0x213
	.byte	0x3
	.byte	0x23
	.uleb128 0xb0
	.uleb128 0x4
	.long	.LASF26
	.byte	0x2
	.value	0x14e
	.long	0x215
	.byte	0x3
	.byte	0x23
	.uleb128 0xb8
	.uleb128 0x4
	.long	.LASF27
	.byte	0x2
	.value	0x150
	.long	0x220
	.byte	0x3
	.byte	0x23
	.uleb128 0xc0
	.uleb128 0x4
	.long	.LASF28
	.byte	0x2
	.value	0x152
	.long	0x2cd
	.byte	0x3
	.byte	0x23
	.uleb128 0xc4
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.byte	0x7
	.long	.LASF29
	.uleb128 0x5
	.byte	0x4
	.byte	0x7
	.long	.LASF30
	.uleb128 0x6
	.byte	0x8
	.uleb128 0x2
	.long	.LASF32
	.byte	0x4
	.byte	0xd4
	.long	0x205
	.uleb128 0x7
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x5
	.byte	0x1
	.byte	0x6
	.long	.LASF33
	.uleb128 0x5
	.byte	0x2
	.byte	0x7
	.long	.LASF34
	.uleb128 0x5
	.byte	0x1
	.byte	0x8
	.long	.LASF35
	.uleb128 0x5
	.byte	0x1
	.byte	0x6
	.long	.LASF36
	.uleb128 0x5
	.byte	0x2
	.byte	0x5
	.long	.LASF37
	.uleb128 0x5
	.byte	0x8
	.byte	0x5
	.long	.LASF38
	.uleb128 0x2
	.long	.LASF39
	.byte	0x5
	.byte	0x8d
	.long	0x24a
	.uleb128 0x2
	.long	.LASF40
	.byte	0x5
	.byte	0x8e
	.long	0x24a
	.uleb128 0x8
	.byte	0x8
	.long	0x227
	.uleb128 0x9
	.long	.LASF92
	.byte	0x2
	.byte	0xb6
	.uleb128 0xa
	.long	.LASF42
	.byte	0x18
	.byte	0x2
	.byte	0xbc
	.long	0x2ab
	.uleb128 0xb
	.long	.LASF43
	.byte	0x2
	.byte	0xbd
	.long	0x2ab
	.byte	0x2
	.byte	0x23
	.uleb128 0
	.uleb128 0xb
	.long	.LASF44
	.byte	0x2
	.byte	0xbe
	.long	0x2b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xb
	.long	.LASF45
	.byte	0x2
	.byte	0xc2
	.long	0x220
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0
	.uleb128 0x8
	.byte	0x8
	.long	0x274
	.uleb128 0x8
	.byte	0x8
	.long	0x38
	.uleb128 0xc
	.long	0x227
	.long	0x2c7
	.uleb128 0xd
	.long	0x205
	.byte	0
	.byte	0
	.uleb128 0x8
	.byte	0x8
	.long	0x26d
	.uleb128 0xc
	.long	0x227
	.long	0x2dd
	.uleb128 0xd
	.long	0x205
	.byte	0x13
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.byte	0x5
	.long	.LASF46
	.uleb128 0x5
	.byte	0x8
	.byte	0x7
	.long	.LASF47
	.uleb128 0xe
	.byte	0x4
	.byte	0x7
	.byte	0x31
	.long	0x347
	.uleb128 0xf
	.long	.LASF48
	.sleb128 256
	.uleb128 0xf
	.long	.LASF49
	.sleb128 512
	.uleb128 0xf
	.long	.LASF50
	.sleb128 1024
	.uleb128 0xf
	.long	.LASF51
	.sleb128 2048
	.uleb128 0xf
	.long	.LASF52
	.sleb128 4096
	.uleb128 0xf
	.long	.LASF53
	.sleb128 8192
	.uleb128 0xf
	.long	.LASF54
	.sleb128 16384
	.uleb128 0xf
	.long	.LASF55
	.sleb128 32768
	.uleb128 0xf
	.long	.LASF56
	.sleb128 1
	.uleb128 0xf
	.long	.LASF57
	.sleb128 2
	.uleb128 0xf
	.long	.LASF58
	.sleb128 4
	.uleb128 0xf
	.long	.LASF59
	.sleb128 8
	.byte	0
	.uleb128 0xa
	.long	.LASF60
	.byte	0x10
	.byte	0x1
	.byte	0x2f
	.long	0x370
	.uleb128 0xb
	.long	.LASF61
	.byte	0x1
	.byte	0x30
	.long	0x220
	.byte	0x2
	.byte	0x23
	.uleb128 0
	.uleb128 0xb
	.long	.LASF62
	.byte	0x1
	.byte	0x31
	.long	0x267
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0
	.uleb128 0x10
	.long	.LASF69
	.byte	0x1
	.byte	0x57
	.quad	.LFB0
	.quad	.LFE0
	.long	.LLST0
	.uleb128 0x11
	.long	.LASF63
	.byte	0x1
	.byte	0x6c
	.long	0x267
	.quad	.LFB1
	.quad	.LFE1
	.long	.LLST1
	.long	0x3d0
	.uleb128 0x12
	.string	"i"
	.byte	0x1
	.byte	0x6d
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x13
	.long	.LASF65
	.byte	0x1
	.byte	0x6f
	.long	0x3d0
	.byte	0x9
	.byte	0x3
	.quad	xbuf.4165
	.byte	0
	.uleb128 0xc
	.long	0x227
	.long	0x3e0
	.uleb128 0xd
	.long	0x205
	.byte	0xf
	.byte	0
	.uleb128 0x11
	.long	.LASF64
	.byte	0x1
	.byte	0x98
	.long	0x267
	.quad	.LFB2
	.quad	.LFE2
	.long	.LLST2
	.long	0x41c
	.uleb128 0x12
	.string	"f"
	.byte	0x1
	.byte	0x99
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x14
	.string	"i"
	.byte	0x1
	.byte	0x9b
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x15
	.long	.LASF66
	.byte	0x1
	.byte	0xa4
	.quad	.LFB3
	.quad	.LFE3
	.long	.LLST3
	.long	0x47f
	.uleb128 0x12
	.string	"str"
	.byte	0x1
	.byte	0xa5
	.long	0x267
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x16
	.long	.LASF61
	.byte	0x1
	.byte	0xa6
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x14
	.string	"s"
	.byte	0x1
	.byte	0xa8
	.long	0x267
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x13
	.long	.LASF62
	.byte	0x1
	.byte	0xa8
	.long	0x267
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.string	"uc"
	.byte	0x1
	.byte	0xa9
	.long	0x235
	.byte	0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x15
	.long	.LASF67
	.byte	0x1
	.byte	0xba
	.quad	.LFB4
	.quad	.LFE4
	.long	.LLST4
	.long	0x4c7
	.uleb128 0x12
	.string	"c"
	.byte	0x1
	.byte	0xbb
	.long	0x235
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x16
	.long	.LASF61
	.byte	0x1
	.byte	0xbc
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x13
	.long	.LASF62
	.byte	0x1
	.byte	0xbe
	.long	0x267
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x15
	.long	.LASF68
	.byte	0x1
	.byte	0xc9
	.quad	.LFB5
	.quad	.LFE5
	.long	.LLST5
	.long	0x4ff
	.uleb128 0x14
	.string	"i"
	.byte	0x1
	.byte	0xcb
	.long	0x220
	.byte	0x1
	.byte	0x53
	.uleb128 0x14
	.string	"uc"
	.byte	0x1
	.byte	0xcc
	.long	0x235
	.byte	0x2
	.byte	0x91
	.sleb128 -33
	.byte	0
	.uleb128 0x10
	.long	.LASF70
	.byte	0x1
	.byte	0xda
	.quad	.LFB6
	.quad	.LFE6
	.long	.LLST6
	.uleb128 0x15
	.long	.LASF71
	.byte	0x1
	.byte	0xff
	.quad	.LFB7
	.quad	.LFE7
	.long	.LLST7
	.long	0x582
	.uleb128 0x17
	.string	"fp"
	.byte	0x1
	.value	0x100
	.long	0x582
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.string	"ind"
	.byte	0x1
	.value	0x101
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x18
	.long	.LASF72
	.byte	0x1
	.value	0x103
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.long	.LASF73
	.byte	0x1
	.value	0x103
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x19
	.string	"i"
	.byte	0x1
	.value	0x103
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x8
	.byte	0x8
	.long	0x2d
	.uleb128 0x1a
	.long	.LASF74
	.byte	0x1
	.value	0x119
	.quad	.LFB8
	.quad	.LFE8
	.long	.LLST8
	.long	0x5c4
	.uleb128 0x17
	.string	"fp"
	.byte	0x1
	.value	0x11a
	.long	0x582
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.string	"i"
	.byte	0x1
	.value	0x11b
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x1a
	.long	.LASF75
	.byte	0x1
	.value	0x125
	.quad	.LFB9
	.quad	.LFE9
	.long	.LLST9
	.long	0x600
	.uleb128 0x17
	.string	"fp"
	.byte	0x1
	.value	0x126
	.long	0x582
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x19
	.string	"i"
	.byte	0x1
	.value	0x128
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1b
	.byte	0x1
	.long	.LASF93
	.byte	0x1
	.value	0x13a
	.long	0x220
	.quad	.LFB10
	.quad	.LFE10
	.long	.LLST10
	.long	0x67d
	.uleb128 0x1c
	.long	.LASF76
	.byte	0x1
	.value	0x13b
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1c
	.long	.LASF77
	.byte	0x1
	.value	0x13c
	.long	0x67d
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x19
	.string	"opt"
	.byte	0x1
	.value	0x13e
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x19
	.string	"i"
	.byte	0x1
	.value	0x13e
	.long	0x220
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.long	.LASF78
	.byte	0x1
	.value	0x13f
	.long	0x267
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x19
	.string	"fp"
	.byte	0x1
	.value	0x140
	.long	0x582
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x8
	.byte	0x8
	.long	0x267
	.uleb128 0x1d
	.long	.LASF79
	.byte	0x3
	.byte	0xaa
	.long	0x2b1
	.byte	0x1
	.byte	0x1
	.uleb128 0x1d
	.long	.LASF80
	.byte	0x3
	.byte	0xab
	.long	0x2b1
	.byte	0x1
	.byte	0x1
	.uleb128 0x1d
	.long	.LASF81
	.byte	0x6
	.byte	0x3b
	.long	0x267
	.byte	0x1
	.byte	0x1
	.uleb128 0x1d
	.long	.LASF82
	.byte	0x6
	.byte	0x49
	.long	0x220
	.byte	0x1
	.byte	0x1
	.uleb128 0xc
	.long	0x347
	.long	0x6c7
	.uleb128 0xd
	.long	0x205
	.byte	0xe
	.byte	0
	.uleb128 0x1e
	.long	.LASF83
	.byte	0x1
	.byte	0x32
	.long	0x6b7
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	wordflags
	.uleb128 0xc
	.long	0x220
	.long	0x6ed
	.uleb128 0xd
	.long	0x205
	.byte	0xff
	.byte	0
	.uleb128 0x1e
	.long	.LASF84
	.byte	0x1
	.byte	0x47
	.long	0x6dd
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	lsyntax
	.uleb128 0x1e
	.long	.LASF85
	.byte	0x1
	.byte	0x48
	.long	0x220
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	debug
	.uleb128 0x1e
	.long	.LASF86
	.byte	0x1
	.byte	0x49
	.long	0x267
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	progname
	.uleb128 0xc
	.long	0x227
	.long	0x73f
	.uleb128 0xd
	.long	0x205
	.byte	0x3e
	.byte	0
	.uleb128 0x1e
	.long	.LASF87
	.byte	0x1
	.byte	0x4b
	.long	0x72f
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	preamble
	.uleb128 0xc
	.long	0x227
	.long	0x765
	.uleb128 0xd
	.long	0x205
	.byte	0x3b
	.byte	0
	.uleb128 0x1e
	.long	.LASF88
	.byte	0x1
	.byte	0x51
	.long	0x755
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.quad	includes
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LFB0-.Ltext0
	.quad	.LCFI0-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI0-.Ltext0
	.quad	.LCFI1-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI1-.Ltext0
	.quad	.LFE0-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	0
	.quad	0
.LLST1:
	.quad	.LFB1-.Ltext0
	.quad	.LCFI2-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI2-.Ltext0
	.quad	.LCFI3-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI3-.Ltext0
	.quad	.LCFI4-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI4-.Ltext0
	.quad	.LFE1-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST2:
	.quad	.LFB2-.Ltext0
	.quad	.LCFI5-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI5-.Ltext0
	.quad	.LCFI6-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI6-.Ltext0
	.quad	.LCFI7-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI7-.Ltext0
	.quad	.LFE2-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST3:
	.quad	.LFB3-.Ltext0
	.quad	.LCFI8-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI8-.Ltext0
	.quad	.LCFI9-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI9-.Ltext0
	.quad	.LCFI10-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI10-.Ltext0
	.quad	.LFE3-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST4:
	.quad	.LFB4-.Ltext0
	.quad	.LCFI11-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI11-.Ltext0
	.quad	.LCFI12-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI12-.Ltext0
	.quad	.LCFI13-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI13-.Ltext0
	.quad	.LFE4-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST5:
	.quad	.LFB5-.Ltext0
	.quad	.LCFI14-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI14-.Ltext0
	.quad	.LCFI15-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI15-.Ltext0
	.quad	.LCFI16-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI16-.Ltext0
	.quad	.LFE5-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST6:
	.quad	.LFB6-.Ltext0
	.quad	.LCFI17-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI17-.Ltext0
	.quad	.LCFI18-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI18-.Ltext0
	.quad	.LCFI19-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI19-.Ltext0
	.quad	.LFE6-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST7:
	.quad	.LFB7-.Ltext0
	.quad	.LCFI20-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI20-.Ltext0
	.quad	.LCFI21-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI21-.Ltext0
	.quad	.LCFI22-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI22-.Ltext0
	.quad	.LFE7-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST8:
	.quad	.LFB8-.Ltext0
	.quad	.LCFI23-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI23-.Ltext0
	.quad	.LCFI24-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI24-.Ltext0
	.quad	.LCFI25-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI25-.Ltext0
	.quad	.LFE8-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST9:
	.quad	.LFB9-.Ltext0
	.quad	.LCFI26-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI26-.Ltext0
	.quad	.LCFI27-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI27-.Ltext0
	.quad	.LCFI28-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	.LCFI28-.Ltext0
	.quad	.LFE9-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	0
	.quad	0
.LLST10:
	.quad	.LFB10-.Ltext0
	.quad	.LCFI29-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 8
	.quad	.LCFI29-.Ltext0
	.quad	.LCFI30-.Ltext0
	.value	0x2
	.byte	0x77
	.sleb128 16
	.quad	.LCFI30-.Ltext0
	.quad	.LFE10-.Ltext0
	.value	0x2
	.byte	0x76
	.sleb128 16
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF13:
	.string	"_chain"
.LASF20:
	.string	"_lock"
.LASF57:
	.string	"_IScntrl"
.LASF53:
	.string	"_ISspace"
.LASF75:
	.string	"dump_lsyntax"
.LASF59:
	.string	"_ISalnum"
.LASF63:
	.string	"cdesc"
.LASF11:
	.string	"_IO_save_end"
.LASF37:
	.string	"short int"
.LASF32:
	.string	"size_t"
.LASF55:
	.string	"_ISgraph"
.LASF58:
	.string	"_ISpunct"
.LASF21:
	.string	"_offset"
.LASF74:
	.string	"wcomment"
.LASF93:
	.string	"main"
.LASF70:
	.string	"load_lsyntax"
.LASF64:
	.string	"getcstr"
.LASF0:
	.string	"_flags"
.LASF86:
	.string	"progname"
.LASF71:
	.string	"dump_lflags"
.LASF7:
	.string	"_IO_buf_base"
.LASF28:
	.string	"_unused2"
.LASF83:
	.string	"wordflags"
.LASF12:
	.string	"_markers"
.LASF2:
	.string	"_IO_read_end"
.LASF51:
	.string	"_ISdigit"
.LASF62:
	.string	"fstr"
.LASF90:
	.string	"./mksyntax.c"
.LASF78:
	.string	"filename"
.LASF56:
	.string	"_ISblank"
.LASF66:
	.string	"addcstr"
.LASF88:
	.string	"includes"
.LASF49:
	.string	"_ISlower"
.LASF80:
	.string	"stderr"
.LASF46:
	.string	"long long int"
.LASF68:
	.string	"addblanks"
.LASF38:
	.string	"long int"
.LASF17:
	.string	"_cur_column"
.LASF45:
	.string	"_pos"
.LASF35:
	.string	"unsigned char"
.LASF77:
	.string	"argv"
.LASF44:
	.string	"_sbuf"
.LASF16:
	.string	"_old_offset"
.LASF40:
	.string	"__off64_t"
.LASF72:
	.string	"xflags"
.LASF76:
	.string	"argc"
.LASF81:
	.string	"optarg"
.LASF36:
	.string	"signed char"
.LASF47:
	.string	"long long unsigned int"
.LASF30:
	.string	"unsigned int"
.LASF42:
	.string	"_IO_marker"
.LASF19:
	.string	"_shortbuf"
.LASF65:
	.string	"xbuf"
.LASF23:
	.string	"__pad2"
.LASF4:
	.string	"_IO_write_base"
.LASF85:
	.string	"debug"
.LASF1:
	.string	"_IO_read_ptr"
.LASF8:
	.string	"_IO_buf_end"
.LASF33:
	.string	"char"
.LASF41:
	.string	"_IO_FILE"
.LASF91:
	.string	"/u5/ijdavis/src/bash2py-2.1/bash"
.LASF82:
	.string	"optind"
.LASF43:
	.string	"_next"
.LASF22:
	.string	"__pad1"
.LASF52:
	.string	"_ISxdigit"
.LASF24:
	.string	"__pad3"
.LASF25:
	.string	"__pad4"
.LASF26:
	.string	"__pad5"
.LASF84:
	.string	"lsyntax"
.LASF34:
	.string	"short unsigned int"
.LASF60:
	.string	"wordflag"
.LASF29:
	.string	"long unsigned int"
.LASF5:
	.string	"_IO_write_ptr"
.LASF6:
	.string	"_IO_write_end"
.LASF67:
	.string	"addcchar"
.LASF14:
	.string	"_fileno"
.LASF87:
	.string	"preamble"
.LASF39:
	.string	"__off_t"
.LASF10:
	.string	"_IO_backup_base"
.LASF15:
	.string	"_flags2"
.LASF54:
	.string	"_ISprint"
.LASF27:
	.string	"_mode"
.LASF3:
	.string	"_IO_read_base"
.LASF48:
	.string	"_ISupper"
.LASF18:
	.string	"_vtable_offset"
.LASF69:
	.string	"usage"
.LASF89:
	.string	"GNU C 4.6.3"
.LASF9:
	.string	"_IO_save_base"
.LASF61:
	.string	"flag"
.LASF31:
	.string	"FILE"
.LASF50:
	.string	"_ISalpha"
.LASF79:
	.string	"stdout"
.LASF92:
	.string	"_IO_lock_t"
.LASF73:
	.string	"first"
	.ident	"GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3"
	.section	.note.GNU-stack,"",@progbits
