import sys, os, os.path
from stat import *
#From: kaz@ashi.footprints.net (Kaz Kylheku)
#Newsgroups: comp.os.linux.misc
#Subject: Re: bash question: subdirectories
#Message-ID: <slrn8a0gu9.v5n.kaz@ashi.FootPrints.net>
#Date: Tue, 08 Feb 2000 16:24:35 GMT
#Actually it can be made to. That is to say, it is possible to code a recursive
#descender function in the bash language. Here is an example. 
#
#What is nice about this is that you can embed the function into your shell
#script. The function changes the current working directory as it descends.
#So it can handle arbitrarily deep paths. Whereas paths generated by the
#find command can cause a problem when they get too long; the kernel has a
#hard limit on the length of the string passed to the open() and other
#system calls. 
#There are races; what if the directory tree is blown away during the traversal?
#The function won't be able to crawl back up using the .. link and will just
#bail.
# Recursive Directory Traverser
# Author: Kaz Kylheku
# Date: Feb 27, 1999
# Copyright 1999
# Function parameter usage:
# $1 directory to search
# $2 pattern to search for
# $3 command to execute
# $4 secret argument for passing down path
def recurse () 
{ 
    os.system('local file')
    
    os.system('local path')
    
    if ("" + sys.argv[4] + "" == ""  ):
        path="" + $ + "{1%/}/"
    else:
        path="" + sys.argv[4] + "" + sys.argv[1] + "/"
    
    if (os.chdir("$1") ):
        for file in [sys.argv[2]]:
                    if (os.path.isfile("" + file + "" ) || S_ISDIR(os.stat("" + file + "" ).st_mode) ):
                os.system('eval "" + sys.argv[3] + ""')
        
        for file in [.*, *]:
                    if ("" + file + "" == "."  || "" + file + "" == ".."  ):
                continue
            
            if (S_ISDIR(os.stat("" + file + "" ).st_mode) && ! -L "" + file + ""  ):
                os.system('recurse "" + file + "" "" + sys.argv[2] + "" "" + sys.argv[3] + "" "" + path + ""')
        
        os.chdir(..)
}
os.system('recurse "" + sys.argv[1] + "" "" + sys.argv[2] + "" 'echo "" + path + "" + file + ""'')
